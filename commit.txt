✨ feat(llm): integrate LLM task management

- add support for natural language task management commands
- implement LLM service with provider configurations (OpenAI, Anthropic, Ollama, Custom API)
- define models for LLM configuration, requests, responses, and task actions
- integrate LLM mode into the add-task-bar component
- include example commands for creating, deleting, updating, completing, and listing tasks

♻️ refactor(llm): enhance task handling with subtasks

- update task deletion logic to handle tasks with subtasks
- modify task update logic to support extended task types
- ensure proper type usage for tasks with subtasks

✅ test(llm): add unit tests for LLM service

- test LLM service initialization and API key handling
- verify proper error handling for missing or invalid configurations
- simulate prompt processing to ensure expected behavior

📝 docs(llm): add documentation for LLM task management

- provide setup instructions for API keys and providers
- include usage examples for different task operations
- explain supported providers, technical details, and troubleshooting

💄 style(llm): update UI for LLM mode

- add LLM mode indicator and result display in the add-task bar
- include styles for success and error states in LLM responses
- update placeholder text to guide users in LLM mode

📦 build(config): add global config support for LLM integration

- define default LLM configuration in global config
- add form configuration for LLM settings in the global config UI
- ensure seamless integration with existing global config structure

🔧 chore(build): add Windows batch script for development server

- create start-dev.bat for starting Angular development server
- configure increased memory limits for large projects